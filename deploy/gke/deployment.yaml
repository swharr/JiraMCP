apiVersion: apps/v1
kind: Deployment
metadata:
  name: jira-mcp-server
  namespace: jira-mcp
  labels:
    app: jira-mcp-server
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: jira-mcp-server
  template:
    metadata:
      labels:
        app: jira-mcp-server
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      serviceAccountName: jira-mcp-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: jira-mcp-server
        image: gcr.io/PROJECT_ID/jira-mcp-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: health
          protocol: TCP
        envFrom:
        - configMapRef:
            name: jira-mcp-config
        - secretRef:
            name: jira-mcp-secrets
        env:
        - name: GCP_PROJECT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['iam.gke.io/gcp-service-account']
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        - name: gcp-service-account
          mountPath: /var/secrets/google
          readOnly: true
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      - name: gcp-service-account
        secret:
          secretName: gcp-service-account-key
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "cloud.google.com/gke-preemptible"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - jira-mcp-server
              topologyKey: kubernetes.io/hostname