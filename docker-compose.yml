version: '3.8'

services:
  jira-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: jira-mcp-server:latest
    container_name: jira-mcp-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - HEALTH_PORT=8080
      - HEALTH_HOST=127.0.0.1
      - DEV_MODE=false
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX_REQUESTS=30
      - CACHE_TTL_MINUTES=15
      - REQUEST_TIMEOUT_MS=10000
      - MAX_EXECUTION_TIME_MS=30000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
      - /tmp:/app/tmp:rw
    networks:
      - jira-mcp-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: jira-mcp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - jira-mcp-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: jira-mcp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - jira-mcp-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

networks:
  jira-mcp-network:
    driver: bridge
    name: jira-mcp-network

volumes:
  prometheus_data:
    name: jira-mcp-prometheus-data
  grafana_data:
    name: jira-mcp-grafana-data
